var Example = Example || {};

Matter.use(
    'matter-wrap'
);

             Example.car = function() {   
             var Engine=Matter.Engine,
                Render=Matter.Render,
                World=Matter.World,
                Constraint=Matter.Constraint,
                MouseConstraint=Matter.MouseConstraint,
                Composites=Matter.Composites,
                Bodies=Matter.Bodies;
            var engine=Engine.create(),
                world=engine.world;
            var render=Render.create({
                 engine:engine,
                 element:document.body,
                 options:{
                 	width:$(window).width(),
                 	height:$(window).height(),
                 	wireframes:false
                 }
           });
            Render.run(render);
           Engine.run(engine);    
           
           var audi=Composites.car(300,100,200,50,50);
           
           var ground=Bodies.rectangle(800,900,1800,100,{
           	    isStatic:true,
           });
           
           var stickA=Bodies.rectangle(400,400,50,700,{
           	   isStatic:true,
           	   angle:-Math.PI*0.4
           });
           var stickB=Bodies.rectangle(700,700,50,700,{
           	   isStatic:true,
           	   angle:Math.PI*0.4
           });
           
           
           
           var mouseConstraint=MouseConstraint.create(engine,{
           	   element:document.body
           });           
           World.add(world,[ground,audi,stickA,stickB,mouseConstraint]);	
             
             	








// keep the mouse in sync with rendering
    render.mouse = mouse;

    // fit the render viewport to the scene
    Render.lookAt(render, {
        min: { x: 0, y: 0 },
        max: { x: 800, y: 600 }
    });

    // context for MatterTools.Demo
    return {
        engine: engine,
        runner: runner,
        render: render,
        canvas: render.canvas,
        stop: function() {
            Matter.Render.stop(render);
            Matter.Runner.stop(runner);
        }
    };
};
